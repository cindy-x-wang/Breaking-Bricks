{"version":3,"sources":["webpack:///webpack/bootstrap 60100a64d433b658cd53","webpack:///./lib/brick.js","webpack:///./lib/game.js","webpack:///./lib/ball.js","webpack:///./lib/breakingbricks.js","webpack:///./lib/brick_layout.js","webpack:///./lib/paddle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;AChCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,0BAA0B;AAC/C,wBAAwB,gCAAgC;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,WAAW;;AAE/C;;AAEA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;;AAEA;;AAEA;;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AClGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;ACVD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAiB;AACtC;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACnDA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 60100a64d433b658cd53","const defaultOptions = {\n  width: 80,\n  height: 22,\n  x: 0,\n  y: 0\n};\n\nclass Brick {\n\n  constructor (canvas, context, options = defaultOptions) {\n    this.canvas = canvas;\n    this.context = context;\n\n    this.width = options.width, this.height = options.height;\n    this.x = options.x, this.y = options.y;\n\n    this.state = \"unbroken\";\n    this.color = \"#B1F3F1\";\n  }\n\n  draw () {\n    if (this.state === \"unbroken\") {\n      this.context.beginPath();\n      this.context.rect(this.x, this.y, this.width, this.height);\n      this.context.fillStyle = this.color;\n      this.context.fill();\n      this.context.closePath();\n    }\n  }\n\n}\n\nexport default Brick;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/brick.js\n// module id = 0\n// module chunks = 0","import Paddle from './paddle';\nimport BrickLayout from './brick_layout';\nimport Ball from './ball';\nimport Brick from './brick';\n\nclass Game {\n\n  constructor (canvas, context) {\n    this.canvas = canvas, this.context = context;\n\n    this.paddle = new Paddle(canvas, context);\n    this.ball = new Ball(canvas, context);\n    this.layout = new BrickLayout(canvas, context);\n\n    this.lives = 3;\n    this.gameEnded = false;\n    this.result = \"L\";\n\n    this.bricks = this.layout.build();\n    this.brickCount = this.layout.initialBrickCount();\n\n    $(document).mousemove(this.handleMouseMove.bind(this));\n\n  }\n\n  // restart () {\n  //   const that = this;\n  //   document.addEventListener('keydown', function(e) {\n  //     e.preventDefault();\n  //     if (window.localStorage) {\n  //       window.localStorage.clear();\n  //     }\n  //     switch(e.keyCode) {\n  //       case 32:\n  //         debugger;\n  //         that.lives = 0;\n  //         const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  //         canvasEl.width = 600;\n  //         canvasEl.height = 460;\n  //\n  //         const context = canvasEl.getContext(\"2d\");\n  //         const game = new Game(canvasEl, context);\n  //         game.draw();\n  //       default:\n  //         return;\n  //     }\n  //   });\n  // }\n\n  handleMouseMove (e) {\n    let distance = e.clientX - this.canvas.offsetLeft;\n\n    if (0 < distance && this.canvas.width > distance) {\n      this.paddle.x = distance - (0.5 * this.paddle.width);\n    }\n  }\n\n  draw () {\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.ball.draw();\n    this.paddle.draw();\n\n    if (this.gameEnded) {\n      this.renderResult();\n      this.ball.dx = 0, this.ball.dy = 0;\n    } else {\n      this.ball.move();\n      this.renderLives();\n    }\n\n    this.renderBricks();\n\n    this.detectCollisions();\n    requestAnimationFrame(this.draw.bind(this));\n\n    this.ball.handleWallCollision();\n    this.handlePaddleCollision();\n    this.handleLifeLoss();\n    // this.restart();\n  }\n\n  handlePaddleCollision () {\n    if (this.ball.y + this.ball.dy > this.canvas.height - this.ball.radius - this.paddle.height) {\n      if (this.ball.checkPaddleCollision(this.paddle)) {\n        let midPaddle = this.paddle.x + (0.5 * this.paddle.width);\n\n        if (midPaddle > this.ball.x) {\n          this.ball.updateAngle(-(Math.abs(this.ball.dx) * (3/4 + (midPaddle - this.ball.x)/(1/2 * this.paddle.width))));\n        } else {\n          this.ball.updateAngle(Math.abs(this.ball.dx) * (3/4 + (this.ball.x - midPaddle)/(1/2 * this.paddle.width)));\n        }\n\n        this.ball.dy *= -1;\n      }\n    }\n  }\n\n  detectCollisions () {\n    for (let idx = 0; idx < this.bricks.length; idx++) {\n      for (let idx2 = 0; idx2 < this.bricks[idx].length; idx2++) {\n        let brick = this.bricks[idx][idx2];\n        if (brick.state === \"unbroken\") {\n          if (this.ball.checkBrickCollision(brick)) {\n            brick.state = \"broken\";\n            this.brickCount -= 1;\n            this.ball.dy *= -1;\n            if (this.brickCount === 0) {\n              this.result = \"W\";\n              this.gameEnded = true;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  handleLifeLoss () {\n    if (this.ball.y + this.ball.dy > this.canvas.height) {\n      this.lives -= 1;\n      if (this.lives === 0) {\n        this.result = \"L\";\n        this.gameEnded = true;\n      } else {\n        this.ball.resetBall();\n      }\n    }\n  }\n\n  renderBricks () {\n    for (let idx = 0; idx < this.bricks.length; idx++) {\n      for (let idx2 = 0; idx2 < this.bricks[idx].length; idx2++) {\n        this.bricks[idx][idx2].draw();\n      }\n    }\n  }\n\n  renderLives () {\n    // this.context.font\n    this.context.fillStyle = \"#4e8948\";\n    this.context.fillText(`Lives: ${this.lives}`, this.canvas.width - 574, 16);\n\n  }\n\n  renderResult () {\n    // this.context.font\n    this.context.fillStyle = \"#4e8948\";\n    this.context.fillText(`Result: ${this.result}`, 280, 230);\n  }\n\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const defaultOptions = {\n  dx: 3,\n  dy: -3,\n  radius: 7,\n  lowSpeed: 4,\n  highSpeed: 10\n};\n\nclass Ball {\n\n  constructor (canvas, context, options = defaultOptions) {\n    this.canvas = canvas;\n    this.context = context;\n\n    this.radius = options.radius;\n    this.x = 0.5 * canvas.width, this.y = canvas.height - 32;\n    this.dx = options.dx, this.dy = options.dy;\n    this.lowSpeed = options.lowSpeed, this.highSpeed = options.highSpeed;\n\n    this.pastAccelerate = 0;\n  }\n\n  draw () {\n    this.context.beginPath();\n    this.context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI, false);\n\n    this.context.fillStyle = \"#FFE963\";\n    this.context.fill();\n    this.context.closePath();\n  }\n\n  move () {\n    this.y += this.dy;\n    this.x += this.dx;\n  }\n\n  accelerate (stage) {\n    if (stage > this.pastAccelerate) {\n      this.updateAngle(this.dx *= 1.25);\n      this.dy *= 1.4;\n      this.pastAccelerate += 1;\n    }\n  }\n\n  updateAngle (velocity) {\n    let direction = (velocity <= 0) ? -1 : 1;\n\n    if (Math.abs(velocity) <= this.lowSpeed) {\n      this.dx = this.lowSpeed * direction;\n    } else if (Math.abs(velocity) >= this.highSpeed) {\n      this.dx = this.highSpeed * direction;\n    } else {\n      this.dx = velocity;\n    }\n  }\n\n  resetBall () {\n    this.x = 0.5 * this.canvas.width;\n    this.y = this.canvas.height - 32;\n    this.dx = 3;\n    this.dy = -3;\n    this.pastAccelerate -= 1;\n  }\n\n  checkPaddleCollision (paddle) {\n    let x = Math.abs(0.5*(this.x - paddle.width - paddle.x));\n    return (x <= ((0.5 * paddle.width) + this.radius));\n  }\n\n  checkBrickCollision (brick) {\n    let x = Math.abs(this.x - brick.x - (0.5 * brick.width));\n    let y = Math.abs(this.y - brick.y - (0.5 * brick.width));\n\n    if (x > ((0.5 * brick.width) + this.radius) || y > ((0.5 * brick.height) + this.radius)) {\n      return false;\n    } else if (x <= (0.5 * brick.width) || y <= (0.5 * brick.height)) {\n      return true;\n    }\n\n    let sideX = x - (0.5 * brick.width);\n    let sideY = y - (0.5 * brick.height);\n\n    return (Math.pow(this.radius, 2) >= (Math.pow(sideX, 2) + Math.pow(sideY, 2)) );\n  }\n\n  handleWallCollision () {\n    let totalX = this.x + this.dx;\n    let totalY = this.y + this.dy;\n\n    if (totalX > this.canvas.width - this.radius || totalX < this.radius) {\n      this.dx *= -1;\n    } else if (totalY < this.radius) {\n      this.dy *= -1;\n    }\n  }\n\n}\n\nexport default Ball;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ball.js\n// module id = 2\n// module chunks = 0","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = 600;\n  canvasEl.height = 460;\n\n  const context = canvasEl.getContext(\"2d\");\n  const game = new Game(canvasEl, context);\n  game.draw();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/breakingbricks.js\n// module id = 3\n// module chunks = 0","import Brick from './brick';\n\nconst defaultOptions = {\n  rows: 5,\n  columns: 8,\n  width: 74,\n  height: 16,\n  brickPadding: 8\n};\n\nclass BrickLayout {\n\n  constructor (canvas, context, options = defaultOptions) {\n    this.canvas = canvas;\n    this.context = context;\n\n    this.rows = options.rows, this.columns = options.columns;\n    this.width = options.width, this.height = options.height;\n    this.brickPadding = options.brickPadding;\n\n    this.offsetTop = 23, this.offsetLeft = 26;\n\n    this.bricks = [];\n    this.brickCount = 0;\n  }\n\n  initialBrickCount () {\n    return this.brickCount;\n  }\n\n  build () {\n    for (let idx = 0; idx < this.rows; idx++) {\n      this.bricks[idx] = [];\n      for (let idx2 = 0; idx2 < this.columns; idx2++) {\n        let brickHor = idx2 * (this.width + this.brickPadding) + this.offsetLeft;\n        let brickVert = idx * (this.height + this.brickPadding) + this.offsetTop;\n        let options = {\n          width: this.width,\n          height: this.height,\n          x: brickHor,\n          y: brickVert\n        };\n        this.brickCount += 1;\n        this.bricks[idx][idx2] = new Brick(this.canvas, this.context, options);\n      }\n    }\n    return this.bricks;\n  }\n\n}\n\nexport default BrickLayout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/brick_layout.js\n// module id = 4\n// module chunks = 0","const defaultOptions = {\n  width: 76,\n  height: 11\n};\n\nclass Paddle {\n\n  constructor (canvas, context, options = defaultOptions) {\n    this.canvas = canvas;\n    this.context = context;\n\n    this.height = options.height, this.width = options.width;\n    this.x = 0.5 * (canvas.width - this.width);\n  }\n\n  draw () {\n    let newHeight = this.canvas.height - this.height;\n    this.context.beginPath();\n    this.context.rect(this.x, newHeight, this.width, this.height);\n\n    this.context.fillStyle = \"#4e8948\";\n    this.context.fill();\n    this.context.closePath();\n  }\n\n  move (amt) {\n    this.x += amt;\n  }\n\n}\n\nexport default Paddle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/paddle.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}